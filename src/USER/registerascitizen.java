    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package USER;

import BDR.loginForm;
import config.Session;
import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


public class registerascitizen extends javax.swing.JFrame {

    private File selectedFile;
    private String destination = "";

    public registerascitizen() {
        initComponents();
    }

    // Add public setter methods for userid and username fields
    public void setUserId(String userId) {
        this.userid.setText(userId);
    }

    public void setUsername(String username) {
        this.username.setText(username);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        userid = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        registerbutton = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        deleteImage = new javax.swing.JButton();
        image = new javax.swing.JLabel();
        selectImage = new javax.swing.JButton();
        back = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(110, 177, 214));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTER AS CITIZEN");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 50, 57), 3));
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(80, 30, 590, 60);

        jPanel2.setBackground(new java.awt.Color(137, 207, 241));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(137, 207, 241));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 240, 20));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("First Name:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 90, 30));

        fname.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        fname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        fname.setOpaque(false);
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        jPanel2.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 180, 30));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Last Name:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 90, 30));

        lname.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lname.setOpaque(false);
        lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnameActionPerformed(evt);
            }
        });
        jPanel2.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 180, 30));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Full Address:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 90, 30));

        address.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        address.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        address.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        address.setOpaque(false);
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        jPanel2.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 180, 30));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("User ID:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 90, 30));

        userid.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        userid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        userid.setEnabled(false);
        userid.setOpaque(false);
        userid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useridActionPerformed(evt);
            }
        });
        jPanel2.add(userid, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 180, 30));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Username:");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 90, 30));

        jPanel3.setBackground(new java.awt.Color(110, 177, 214));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registerbutton.setBackground(new java.awt.Color(110, 177, 214));
        registerbutton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        registerbutton.setForeground(new java.awt.Color(0, 0, 0));
        registerbutton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registerbutton.setText("REGISTER");
        registerbutton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        registerbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerbuttonMouseClicked(evt);
            }
        });
        jPanel3.add(registerbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 140, 30));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 180, 50));

        username.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        username.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        username.setEnabled(false);
        username.setOpaque(false);
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        jPanel2.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 180, 30));

        deleteImage.setBackground(new java.awt.Color(110, 177, 214));
        deleteImage.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        deleteImage.setForeground(new java.awt.Color(0, 0, 0));
        deleteImage.setText("DELETE");
        deleteImage.setBorder(null);
        deleteImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteImageActionPerformed(evt);
            }
        });
        jPanel2.add(deleteImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 90, 40));

        image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 140, 130));

        selectImage.setBackground(new java.awt.Color(110, 177, 214));
        selectImage.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        selectImage.setForeground(new java.awt.Color(0, 0, 0));
        selectImage.setText("SELECT");
        selectImage.setBorder(null);
        selectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageActionPerformed(evt);
            }
        });
        jPanel2.add(selectImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 90, 40));

        jPanel1.add(jPanel2);
        jPanel2.setBounds(40, 100, 680, 300);

        back.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(0, 0, 0));
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_Folder/back-arrow.png"))); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        jPanel1.add(back);
        back.setBounds(10, 20, 64, 64);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameActionPerformed

    private void lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnameActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void useridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useridActionPerformed

    private void registerbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerbuttonMouseClicked
        // Update users table and insert into citizens table
        String firstName = fname.getText().trim();
        String lastName = lname.getText().trim();
        String fullAddress = address.getText().trim();
        String userIdStr = userid.getText().trim();

        if (firstName.isEmpty() || lastName.isEmpty() || fullAddress.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields", "Input Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        int userId;
        try {
            userId = Integer.parseInt(userIdStr);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid User ID", "Input Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        config.config conf = new config.config();
        java.sql.Connection conn = null;
        java.sql.PreparedStatement pstmtUpdateUser = null;
        java.sql.PreparedStatement pstmtInsertCitizen = null;

        try {
            conn = conf.getConnection();
            conn.setAutoCommit(false);

            // Fetch account_type for the user
            String selectAccountTypeSql = "SELECT account_type FROM users WHERE U_Id = ?";
            java.sql.PreparedStatement selectPst = conn.prepareStatement(selectAccountTypeSql);
            selectPst.setInt(1, userId);
            java.sql.ResultSet rs = selectPst.executeQuery();

            String accountType = null;
            if (rs.next()) {
                accountType = rs.getString("account_type");
            }
            rs.close();
            selectPst.close();

            if (accountType == null) {
                JOptionPane.showMessageDialog(this, "User not found", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Update users table including account_type to Citizen only if current account_type is 'user'
            if ("user".equalsIgnoreCase(accountType)) {
                String updateUserSql = "UPDATE users SET fname = ?, lname = ?, address = ?, account_type = 'citizen' WHERE U_Id = ?";
                pstmtUpdateUser = conn.prepareStatement(updateUserSql);
                pstmtUpdateUser.setString(1, firstName);
                pstmtUpdateUser.setString(2, lastName);
                pstmtUpdateUser.setString(3, fullAddress);
                pstmtUpdateUser.setInt(4, userId);
            } else {
                // If account_type is admin or others, update only fname, lname, address
                String updateUserSql = "UPDATE users SET fname = ?, lname = ?, address = ? WHERE U_Id = ?";
                pstmtUpdateUser = conn.prepareStatement(updateUserSql);
                pstmtUpdateUser.setString(1, firstName);
                pstmtUpdateUser.setString(2, lastName);
                pstmtUpdateUser.setString(3, fullAddress);
                pstmtUpdateUser.setInt(4, userId);
            }

            int updatedRows = pstmtUpdateUser.executeUpdate();

            if (updatedRows == 0) {
                conn.rollback();
                JOptionPane.showMessageDialog(this, "User not found", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Insert into citizens table including photo path
            String insertCitizenSql = "INSERT INTO citizens (U_Id, status, photo) VALUES (?, ?, ?)";
            pstmtInsertCitizen = conn.prepareStatement(insertCitizenSql);
            pstmtInsertCitizen.setInt(1, userId);
            pstmtInsertCitizen.setString(2, "Pending");
            pstmtInsertCitizen.setString(3, destination); // store photo path
            pstmtInsertCitizen.executeUpdate();

            conn.commit();
            JOptionPane.showMessageDialog(this, "Registration as citizen successful", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
             new loginForm().setVisible(true);  
        } catch (Exception ex) {
            try {
                if (conn != null) conn.rollback();
            } catch (Exception rollbackEx) {
                // ignore
            }
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Database Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (pstmtUpdateUser != null) pstmtUpdateUser.close();
                if (pstmtInsertCitizen != null) pstmtInsertCitizen.close();
                if (conn != null) conf.closeConnection();
            } catch (Exception e) {
                // ignore
            }
        }
    }//GEN-LAST:event_registerbuttonMouseClicked

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        new userDashboardRevise().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void selectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageActionPerformed
       JFileChooser fileChooser = new javax.swing.JFileChooser();
        javax.swing.filechooser.FileNameExtensionFilter filter = new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            ImageIcon icon = new javax.swing.ImageIcon(selectedFile.getAbsolutePath());
            Image img = icon.getImage();
            Image newImg = img.getScaledInstance(image.getWidth(), image.getHeight(), java.awt.Image.SCALE_SMOOTH);
            image.setIcon(new javax.swing.ImageIcon(newImg));
            // Save the selected file to destination path
            destination = "src/userimages/" + selectedFile.getName();
            try {
                java.nio.file.Files.copy(selectedFile.toPath(), new java.io.File(destination).toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Failed to save image: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_selectImageActionPerformed

    private void deleteImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteImageActionPerformed
        image.setIcon(null);
        selectedFile = null;
        destination = "";
    }//GEN-LAST:event_deleteImageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registerascitizen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registerascitizen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registerascitizen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registerascitizen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registerascitizen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JLabel back;
    private javax.swing.JButton deleteImage;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField lname;
    private javax.swing.JLabel registerbutton;
    private javax.swing.JButton selectImage;
    private javax.swing.JTextField userid;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
